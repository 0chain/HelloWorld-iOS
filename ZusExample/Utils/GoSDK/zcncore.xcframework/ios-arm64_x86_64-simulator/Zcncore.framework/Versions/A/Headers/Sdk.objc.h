// Objective-C API for talking to github.com/0chain/gosdk/mobilesdk/sdk Go package.
//   gobind -lang=objc github.com/0chain/gosdk/mobilesdk/sdk
//
// File is generated by gobind. Do not edit.

#ifndef __Sdk_H__
#define __Sdk_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Zbox.objc.h"
#include "Zboxapi.objc.h"
#include "Zcncore.objc.h"

@class SdkChainConfig;
@class SdkStorageSDK;

/**
 * ChainConfig - blockchain config
 */
@interface SdkChainConfig : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull chainID;
// skipped field ChainConfig.PreferredBlobbers with unsupported type: []string

@property (nonatomic) NSString* _Nonnull blockWorker;
@property (nonatomic) NSString* _Nonnull signatureScheme;
/**
 * ZboxHost 0box api host host: "https://0box.dev.0chain.net"
 */
@property (nonatomic) NSString* _Nonnull zboxHost;
/**
 * ZboxAppType app type name
 */
@property (nonatomic) NSString* _Nonnull zboxAppType;
@end

/**
 * StorageSDK - storage SDK config
 */
@interface SdkStorageSDK : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * CancelAllocation - cancel allocation by ID
 */
- (NSString* _Nonnull)cancelAllocation:(NSString* _Nullable)allocationID error:(NSError* _Nullable* _Nullable)error;
/**
 * CreateAllocation - creating new allocation
## Inputs
  - datashards: number of data shards, effects upload and download speeds
  - parityshards: number of parity shards, effects availability
  - size: size of space reserved on blobbers
  - expiration: duration to allocation expiration
  - lock: lock write pool with given number of tokens
 */
- (ZboxAllocation* _Nullable)createAllocation:(long)datashards parityshards:(long)parityshards size:(int64_t)size expiration:(int64_t)expiration lock:(NSString* _Nullable)lock error:(NSError* _Nullable* _Nullable)error;
/**
 * CreateAllocationWithBlobbers - creating new allocation with list of blobbers

		## Inputs
	  - name: allocation name
	  - datashards: number of data shards, effects upload and download speeds
	  - parityshards: number of parity shards, effects availability
	  - size: size of space reserved on blobbers
	  - expiration: duration to allocation expiration
		- lock: lock write pool with given number of tokens
		- blobberUrls: concat blobber urls with comma. leave it as empty if you don't have any preferred blobbers
		- blobberIds: concat blobber ids with comma. leave it as empty if you don't have any preferred blobbers
 */
- (ZboxAllocation* _Nullable)createAllocationWithBlobbers:(NSString* _Nullable)name datashards:(long)datashards parityshards:(long)parityshards size:(int64_t)size expiration:(int64_t)expiration lock:(NSString* _Nullable)lock blobberUrls:(NSString* _Nullable)blobberUrls blobberIds:(NSString* _Nullable)blobberIds error:(NSError* _Nullable* _Nullable)error;
/**
 * FinalizeAllocation - finalize allocation
 */
- (NSString* _Nonnull)finalizeAllocation:(NSString* _Nullable)allocationID error:(NSError* _Nullable* _Nullable)error;
/**
 * GetAllocation - get allocation from ID
 */
- (ZboxAllocation* _Nullable)getAllocation:(NSString* _Nullable)allocationID error:(NSError* _Nullable* _Nullable)error;
/**
 * GetAllocationFromAuthTicket - get allocation from Auth ticket
 */
- (ZboxAllocation* _Nullable)getAllocationFromAuthTicket:(NSString* _Nullable)authTicket error:(NSError* _Nullable* _Nullable)error;
/**
 * GetAllocationStats - get allocation stats by allocation ID
 */
- (NSString* _Nonnull)getAllocationStats:(NSString* _Nullable)allocationID error:(NSError* _Nullable* _Nullable)error;
/**
 * GetAllocations - get list of allocations
 */
- (NSString* _Nonnull)getAllocations:(NSError* _Nullable* _Nullable)error;
/**
 * GetBlobbersList get list of active blobbers, and format them as array json string
 */
- (NSString* _Nonnull)getBlobbersList:(NSError* _Nullable* _Nullable)error;
/**
 * GetReadPoolInfo is to get information about the read pool for the allocation
 */
- (NSString* _Nonnull)getReadPoolInfo:(NSString* _Nullable)clientID error:(NSError* _Nullable* _Nullable)error;
/**
 * GetVersion getting current version for gomobile lib
 */
- (NSString* _Nonnull)getVersion;
- (NSString* _Nonnull)redeemFreeStorage:(NSString* _Nullable)ticket error:(NSError* _Nullable* _Nullable)error;
// skipped method StorageSDK.UpdateAllocation with unsupported parameter or return types

- (BOOL)writePoolLock:(int64_t)durInSeconds tokens:(double)tokens fee:(double)fee allocID:(NSString* _Nullable)allocID error:(NSError* _Nullable* _Nullable)error;
@end

@interface Sdk : NSObject
+ (NSError* _Nullable) errInvalidSignatureScheme;
+ (void) setErrInvalidSignatureScheme:(NSError* _Nullable)v;

@end

/**
 * GetAllocations return back list of allocations for the wallet
Extracted from main method, bcz of class fields
 */
FOUNDATION_EXPORT NSString* _Nonnull SdkGetAllocations(NSError* _Nullable* _Nullable error);

/**
 * GetLookupHash get lookup hash with allocation id and path
## Inputs
  - allocationID
  - remotePath

## Outputs
  - lookup_hash
 */
FOUNDATION_EXPORT NSString* _Nonnull SdkGetLookupHash(NSString* _Nullable allocationID, NSString* _Nullable remotePath);

FOUNDATION_EXPORT BOOL SdkInit(NSString* _Nullable chainConfigJson, NSError* _Nullable* _Nullable error);

/**
 * InitStorageSDK - init storage sdk from config
  - clientJson
    {
    "client_id":"8f6ce6457fc04cfb4eb67b5ce3162fe2b85f66ef81db9d1a9eaa4ffe1d2359e0",
    "client_key":"c8c88854822a1039c5a74bdb8c025081a64b17f52edd463fbecb9d4a42d15608f93b5434e926d67a828b88e63293b6aedbaf0042c7020d0a96d2e2f17d3779a4",
    "keys":[
    {
    "public_key":"c8c88854822a1039c5a74bdb8c025081a64b17f52edd463fbecb9d4a42d15608f93b5434e926d67a828b88e63293b6aedbaf0042c7020d0a96d2e2f17d3779a4",
    "private_key":"72f480d4b1e7fb76e04327b7c2348a99a64f0ff2c5ebc3334a002aa2e66e8506"
    }],
    "mnemonics":"abandon mercy into make powder fashion butter ignore blade vanish plastic shock learn nephew matrix indoor surge document motor group barely offer pottery antenna",
    "version":"1.0",
    "date_created":"1668667145",
    "nonce":0
    }
  - configJson
    {
    "block_worker": "https://dev.0chain.net/dns",
    "signature_scheme": "bls0chain",
    "min_submit": 50,
    "min_confirmation": 50,
    "confirmation_chain_length": 3,
    "max_txn_query": 5,
    "query_sleep_time": 5,
    "preferred_blobbers": ["https://dev.0chain.net/blobber02","https://dev.0chain.net/blobber03"],
    "chain_id":"0afc093ffb509f059c55478bc1a60351cef7b4e9c008a53a6cc8241ca8617dfe",
    "ethereum_node":"https://ropsten.infura.io/v3/xxxxxxxxxxxxxxx",
    "zbox_host":"https://0box.dev.0chain.net",
    "zbox_app_type":"vult",
    }
 */
FOUNDATION_EXPORT SdkStorageSDK* _Nullable SdkInitStorageSDK(NSString* _Nullable clientJson, NSString* _Nullable configJson, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL SdkRegisterToMiners(NSString* _Nullable clientId, NSString* _Nullable pubKey, id<ZcncoreWalletCallback> _Nullable callback, NSError* _Nullable* _Nullable error);

/**
 * SetLogFile - setting up log level for core libraries

	# Inputs
	- logFile: the output file of logs
	- verbose: output detail logs
 */
FOUNDATION_EXPORT void SdkSetLogFile(NSString* _Nullable logFile, BOOL verbose);

/**
 * SetLogLevel set the log level.
lvl - 0 disabled; higher number (upto 4) more verbosity
 */
FOUNDATION_EXPORT void SdkSetLogLevel(long logLevel);

/**
 * SignRequest sign data with private key and scheme
 */
FOUNDATION_EXPORT NSString* _Nonnull SdkSignRequest(NSString* _Nullable privateKey, NSString* _Nullable signatureScheme, NSString* _Nullable data, NSError* _Nullable* _Nullable error);

/**
 * SplitKeys split keys by private key, return json string of wallet

	 {
			"client_id":"3943b66200f4702145596de769c5137b333b42bf67c665677355843f233009e2",
			"client_key":"3423af4e1d19b99d5997a7ce5ee9fb46372a5e6a2af18e4640e1aeb3fe116f18580e723ae6d6527ff4cf81b537d4bbf5de670169654fa8f9e54291fa930f9f9a",
			"keys":[{
				"public_key":"3423af4e1d19b99d5997a7ce5ee9fb46372a5e6a2af18e4640e1aeb3fe116f18580e723ae6d6527ff4cf81b537d4bbf5de670169654fa8f9e54291fa930f9f9a",
				"private_key":"69a59735f39eae40b80d53a73c5d7b161998da0b7cea44c94672a01c9128da09"
				}
			],
			"mnemonics":"guitar cook depend snake response major argue abstract script tonight energy soccer copy latin street bracket combine image fabric maximum mercy icon bitter dwarf",
			"version":"1.0","date_created":"2022-11-02T10:21:32+08:00","nonce":0}
 */
FOUNDATION_EXPORT NSData* _Nullable SdkSplitKeys(NSString* _Nullable privateKey, NSString* _Nullable signatureScheme, long numSplits, NSError* _Nullable* _Nullable error);

/**
 * VerifySignature verify signature with public key, schema and data
 */
FOUNDATION_EXPORT BOOL SdkVerifySignature(NSString* _Nullable publicKey, NSString* _Nullable signatureScheme, NSString* _Nullable data, NSString* _Nullable signature, BOOL* _Nullable ret0_, NSError* _Nullable* _Nullable error);

#endif
